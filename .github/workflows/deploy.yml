name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# 権限設定を追加
permissions:
  contents: read
  pages: write
  id-token: write

# 環境設定
env:
  NODE_VERSION: "22"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "10.13.1"

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Copy CNAME file
        run: |
          cp CNAME dist/
          cp -r images dist/ || echo "images directory not found, skipping"

      - name: Check build output
        run: |
          echo "Checking if dist directory exists..."
          ls -la dist/
          echo "Checking if index.html exists..."
          test -f dist/index.html && echo "✅ index.html found" || echo "❌ index.html not found"
          echo "Checking if assets directory exists..."
          test -d dist/assets && echo "✅ assets directory found" || echo "❌ assets directory not found"
          echo "Checking if CNAME file exists..."
          test -f dist/CNAME && echo "✅ CNAME file found" || echo "❌ CNAME file not found"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
